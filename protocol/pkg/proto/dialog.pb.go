// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: dialog.proto

package proto

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DialogMessageType int32

const (
	DialogMessageType_NIL    DialogMessageType = 0
	DialogMessageType_NORMAL DialogMessageType = 1
	DialogMessageType_CODE   DialogMessageType = 2
)

// Enum value maps for DialogMessageType.
var (
	DialogMessageType_name = map[int32]string{
		0: "NIL",
		1: "NORMAL",
		2: "CODE",
	}
	DialogMessageType_value = map[string]int32{
		"NIL":    0,
		"NORMAL": 1,
		"CODE":   2,
	}
)

func (x DialogMessageType) Enum() *DialogMessageType {
	p := new(DialogMessageType)
	*p = x
	return p
}

func (x DialogMessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DialogMessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_dialog_proto_enumTypes[0].Descriptor()
}

func (DialogMessageType) Type() protoreflect.EnumType {
	return &file_dialog_proto_enumTypes[0]
}

func (x DialogMessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DialogMessageType.Descriptor instead.
func (DialogMessageType) EnumDescriptor() ([]byte, []int) {
	return file_dialog_proto_rawDescGZIP(), []int{0}
}

type GetDialogMessagesRequest_OffsetType int32

const (
	GetDialogMessagesRequest_BEFORE         GetDialogMessagesRequest_OffsetType = 0
	GetDialogMessagesRequest_BEFORE_INCLUDE GetDialogMessagesRequest_OffsetType = 1
	GetDialogMessagesRequest_AFTER          GetDialogMessagesRequest_OffsetType = 2
	GetDialogMessagesRequest_AFTER_INCLUDE  GetDialogMessagesRequest_OffsetType = 3
)

// Enum value maps for GetDialogMessagesRequest_OffsetType.
var (
	GetDialogMessagesRequest_OffsetType_name = map[int32]string{
		0: "BEFORE",
		1: "BEFORE_INCLUDE",
		2: "AFTER",
		3: "AFTER_INCLUDE",
	}
	GetDialogMessagesRequest_OffsetType_value = map[string]int32{
		"BEFORE":         0,
		"BEFORE_INCLUDE": 1,
		"AFTER":          2,
		"AFTER_INCLUDE":  3,
	}
)

func (x GetDialogMessagesRequest_OffsetType) Enum() *GetDialogMessagesRequest_OffsetType {
	p := new(GetDialogMessagesRequest_OffsetType)
	*p = x
	return p
}

func (x GetDialogMessagesRequest_OffsetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetDialogMessagesRequest_OffsetType) Descriptor() protoreflect.EnumDescriptor {
	return file_dialog_proto_enumTypes[1].Descriptor()
}

func (GetDialogMessagesRequest_OffsetType) Type() protoreflect.EnumType {
	return &file_dialog_proto_enumTypes[1]
}

func (x GetDialogMessagesRequest_OffsetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetDialogMessagesRequest_OffsetType.Descriptor instead.
func (GetDialogMessagesRequest_OffsetType) EnumDescriptor() ([]byte, []int) {
	return file_dialog_proto_rawDescGZIP(), []int{4, 0}
}

type GetInstructionsByIDRequest_OffsetType int32

const (
	GetInstructionsByIDRequest_AFTER GetInstructionsByIDRequest_OffsetType = 0
)

// Enum value maps for GetInstructionsByIDRequest_OffsetType.
var (
	GetInstructionsByIDRequest_OffsetType_name = map[int32]string{
		0: "AFTER",
	}
	GetInstructionsByIDRequest_OffsetType_value = map[string]int32{
		"AFTER": 0,
	}
)

func (x GetInstructionsByIDRequest_OffsetType) Enum() *GetInstructionsByIDRequest_OffsetType {
	p := new(GetInstructionsByIDRequest_OffsetType)
	*p = x
	return p
}

func (x GetInstructionsByIDRequest_OffsetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetInstructionsByIDRequest_OffsetType) Descriptor() protoreflect.EnumDescriptor {
	return file_dialog_proto_enumTypes[2].Descriptor()
}

func (GetInstructionsByIDRequest_OffsetType) Type() protoreflect.EnumType {
	return &file_dialog_proto_enumTypes[2]
}

func (x GetInstructionsByIDRequest_OffsetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetInstructionsByIDRequest_OffsetType.Descriptor instead.
func (GetInstructionsByIDRequest_OffsetType) EnumDescriptor() ([]byte, []int) {
	return file_dialog_proto_rawDescGZIP(), []int{13, 0}
}

type DialogMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageID   *MessageID           `protobuf:"bytes,1,opt,name=messageID,proto3" json:"messageID,omitempty"`
	SenderID    *UserID              `protobuf:"bytes,2,opt,name=senderID,proto3" json:"senderID,omitempty"`
	Text        string               `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	CreatedAt   *timestamp.Timestamp `protobuf:"bytes,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	SelfMessage bool                 `protobuf:"varint,5,opt,name=selfMessage,proto3" json:"selfMessage,omitempty"`
	Viewed      bool                 `protobuf:"varint,6,opt,name=viewed,proto3" json:"viewed,omitempty"`
	Type        DialogMessageType    `protobuf:"varint,7,opt,name=type,proto3,enum=proto.DialogMessageType" json:"type,omitempty"`
}

func (x *DialogMessage) Reset() {
	*x = DialogMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialog_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DialogMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DialogMessage) ProtoMessage() {}

func (x *DialogMessage) ProtoReflect() protoreflect.Message {
	mi := &file_dialog_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DialogMessage.ProtoReflect.Descriptor instead.
func (*DialogMessage) Descriptor() ([]byte, []int) {
	return file_dialog_proto_rawDescGZIP(), []int{0}
}

func (x *DialogMessage) GetMessageID() *MessageID {
	if x != nil {
		return x.MessageID
	}
	return nil
}

func (x *DialogMessage) GetSenderID() *UserID {
	if x != nil {
		return x.SenderID
	}
	return nil
}

func (x *DialogMessage) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *DialogMessage) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DialogMessage) GetSelfMessage() bool {
	if x != nil {
		return x.SelfMessage
	}
	return false
}

func (x *DialogMessage) GetViewed() bool {
	if x != nil {
		return x.Viewed
	}
	return false
}

func (x *DialogMessage) GetType() DialogMessageType {
	if x != nil {
		return x.Type
	}
	return DialogMessageType_NIL
}

type Dialog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DialogID            *DialogID      `protobuf:"bytes,1,opt,name=dialogID,proto3" json:"dialogID,omitempty"`
	Name                string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	UnreadMessagesCount uint64         `protobuf:"varint,3,opt,name=unreadMessagesCount,proto3" json:"unreadMessagesCount,omitempty"`
	LastMessage         *DialogMessage `protobuf:"bytes,4,opt,name=lastMessage,proto3" json:"lastMessage,omitempty"`
	LastReadMessage     *DialogMessage `protobuf:"bytes,5,opt,name=lastReadMessage,proto3" json:"lastReadMessage,omitempty"`
}

func (x *Dialog) Reset() {
	*x = Dialog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialog_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dialog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dialog) ProtoMessage() {}

func (x *Dialog) ProtoReflect() protoreflect.Message {
	mi := &file_dialog_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dialog.ProtoReflect.Descriptor instead.
func (*Dialog) Descriptor() ([]byte, []int) {
	return file_dialog_proto_rawDescGZIP(), []int{1}
}

func (x *Dialog) GetDialogID() *DialogID {
	if x != nil {
		return x.DialogID
	}
	return nil
}

func (x *Dialog) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Dialog) GetUnreadMessagesCount() uint64 {
	if x != nil {
		return x.UnreadMessagesCount
	}
	return 0
}

func (x *Dialog) GetLastMessage() *DialogMessage {
	if x != nil {
		return x.LastMessage
	}
	return nil
}

func (x *Dialog) GetLastReadMessage() *DialogMessage {
	if x != nil {
		return x.LastReadMessage
	}
	return nil
}

type GetDialogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset uint64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  uint64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetDialogsRequest) Reset() {
	*x = GetDialogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialog_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDialogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDialogsRequest) ProtoMessage() {}

func (x *GetDialogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dialog_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDialogsRequest.ProtoReflect.Descriptor instead.
func (*GetDialogsRequest) Descriptor() ([]byte, []int) {
	return file_dialog_proto_rawDescGZIP(), []int{2}
}

func (x *GetDialogsRequest) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetDialogsRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetDialogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dialogs []*Dialog `protobuf:"bytes,1,rep,name=dialogs,proto3" json:"dialogs,omitempty"`
}

func (x *GetDialogsResponse) Reset() {
	*x = GetDialogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialog_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDialogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDialogsResponse) ProtoMessage() {}

func (x *GetDialogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dialog_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDialogsResponse.ProtoReflect.Descriptor instead.
func (*GetDialogsResponse) Descriptor() ([]byte, []int) {
	return file_dialog_proto_rawDescGZIP(), []int{3}
}

func (x *GetDialogsResponse) GetDialogs() []*Dialog {
	if x != nil {
		return x.Dialogs
	}
	return nil
}

type GetDialogMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DialogID   *DialogID                           `protobuf:"bytes,1,opt,name=dialogID,proto3" json:"dialogID,omitempty"`
	MessageID  *MessageID                          `protobuf:"bytes,2,opt,name=messageID,proto3" json:"messageID,omitempty"`
	Limit      uint64                              `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	OffsetType GetDialogMessagesRequest_OffsetType `protobuf:"varint,4,opt,name=offsetType,proto3,enum=proto.GetDialogMessagesRequest_OffsetType" json:"offsetType,omitempty"`
}

func (x *GetDialogMessagesRequest) Reset() {
	*x = GetDialogMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialog_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDialogMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDialogMessagesRequest) ProtoMessage() {}

func (x *GetDialogMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dialog_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDialogMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetDialogMessagesRequest) Descriptor() ([]byte, []int) {
	return file_dialog_proto_rawDescGZIP(), []int{4}
}

func (x *GetDialogMessagesRequest) GetDialogID() *DialogID {
	if x != nil {
		return x.DialogID
	}
	return nil
}

func (x *GetDialogMessagesRequest) GetMessageID() *MessageID {
	if x != nil {
		return x.MessageID
	}
	return nil
}

func (x *GetDialogMessagesRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetDialogMessagesRequest) GetOffsetType() GetDialogMessagesRequest_OffsetType {
	if x != nil {
		return x.OffsetType
	}
	return GetDialogMessagesRequest_BEFORE
}

type GetDialogMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*DialogMessage `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *GetDialogMessagesResponse) Reset() {
	*x = GetDialogMessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialog_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDialogMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDialogMessagesResponse) ProtoMessage() {}

func (x *GetDialogMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dialog_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDialogMessagesResponse.ProtoReflect.Descriptor instead.
func (*GetDialogMessagesResponse) Descriptor() ([]byte, []int) {
	return file_dialog_proto_rawDescGZIP(), []int{5}
}

func (x *GetDialogMessagesResponse) GetMessages() []*DialogMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type CreateDialogMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DialogID *DialogID `protobuf:"bytes,1,opt,name=dialogID,proto3" json:"dialogID,omitempty"`
	Text     string    `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *CreateDialogMessageRequest) Reset() {
	*x = CreateDialogMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialog_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDialogMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDialogMessageRequest) ProtoMessage() {}

func (x *CreateDialogMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dialog_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDialogMessageRequest.ProtoReflect.Descriptor instead.
func (*CreateDialogMessageRequest) Descriptor() ([]byte, []int) {
	return file_dialog_proto_rawDescGZIP(), []int{6}
}

func (x *CreateDialogMessageRequest) GetDialogID() *DialogID {
	if x != nil {
		return x.DialogID
	}
	return nil
}

func (x *CreateDialogMessageRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type CreateDialogMessageWithCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DialogID *DialogID `protobuf:"bytes,1,opt,name=dialogID,proto3" json:"dialogID,omitempty"`
	Title    string    `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Text     string    `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *CreateDialogMessageWithCodeRequest) Reset() {
	*x = CreateDialogMessageWithCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialog_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDialogMessageWithCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDialogMessageWithCodeRequest) ProtoMessage() {}

func (x *CreateDialogMessageWithCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dialog_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDialogMessageWithCodeRequest.ProtoReflect.Descriptor instead.
func (*CreateDialogMessageWithCodeRequest) Descriptor() ([]byte, []int) {
	return file_dialog_proto_rawDescGZIP(), []int{7}
}

func (x *CreateDialogMessageWithCodeRequest) GetDialogID() *DialogID {
	if x != nil {
		return x.DialogID
	}
	return nil
}

func (x *CreateDialogMessageWithCodeRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateDialogMessageWithCodeRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type CreateDialogMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageID *MessageID           `protobuf:"bytes,1,opt,name=messageID,proto3" json:"messageID,omitempty"`
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *CreateDialogMessageResponse) Reset() {
	*x = CreateDialogMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialog_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDialogMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDialogMessageResponse) ProtoMessage() {}

func (x *CreateDialogMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dialog_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDialogMessageResponse.ProtoReflect.Descriptor instead.
func (*CreateDialogMessageResponse) Descriptor() ([]byte, []int) {
	return file_dialog_proto_rawDescGZIP(), []int{8}
}

func (x *CreateDialogMessageResponse) GetMessageID() *MessageID {
	if x != nil {
		return x.MessageID
	}
	return nil
}

func (x *CreateDialogMessageResponse) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type ReadAllMessagesBeforeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DialogID  *DialogID  `protobuf:"bytes,1,opt,name=dialogID,proto3" json:"dialogID,omitempty"`
	MessageID *MessageID `protobuf:"bytes,2,opt,name=messageID,proto3" json:"messageID,omitempty"`
}

func (x *ReadAllMessagesBeforeRequest) Reset() {
	*x = ReadAllMessagesBeforeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialog_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadAllMessagesBeforeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAllMessagesBeforeRequest) ProtoMessage() {}

func (x *ReadAllMessagesBeforeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dialog_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAllMessagesBeforeRequest.ProtoReflect.Descriptor instead.
func (*ReadAllMessagesBeforeRequest) Descriptor() ([]byte, []int) {
	return file_dialog_proto_rawDescGZIP(), []int{9}
}

func (x *ReadAllMessagesBeforeRequest) GetDialogID() *DialogID {
	if x != nil {
		return x.DialogID
	}
	return nil
}

func (x *ReadAllMessagesBeforeRequest) GetMessageID() *MessageID {
	if x != nil {
		return x.MessageID
	}
	return nil
}

type CreateInstructionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DialogID *DialogID `protobuf:"bytes,1,opt,name=dialogID,proto3" json:"dialogID,omitempty"`
	Title    string    `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Text     string    `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *CreateInstructionRequest) Reset() {
	*x = CreateInstructionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialog_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInstructionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInstructionRequest) ProtoMessage() {}

func (x *CreateInstructionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dialog_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInstructionRequest.ProtoReflect.Descriptor instead.
func (*CreateInstructionRequest) Descriptor() ([]byte, []int) {
	return file_dialog_proto_rawDescGZIP(), []int{10}
}

func (x *CreateInstructionRequest) GetDialogID() *DialogID {
	if x != nil {
		return x.DialogID
	}
	return nil
}

func (x *CreateInstructionRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateInstructionRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type Instruction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstructionID *InstructionID       `protobuf:"bytes,1,opt,name=instructionID,proto3" json:"instructionID,omitempty"`
	CreatedAt     *timestamp.Timestamp `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	Title         string               `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Text          string               `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *Instruction) Reset() {
	*x = Instruction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialog_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instruction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instruction) ProtoMessage() {}

func (x *Instruction) ProtoReflect() protoreflect.Message {
	mi := &file_dialog_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instruction.ProtoReflect.Descriptor instead.
func (*Instruction) Descriptor() ([]byte, []int) {
	return file_dialog_proto_rawDescGZIP(), []int{11}
}

func (x *Instruction) GetInstructionID() *InstructionID {
	if x != nil {
		return x.InstructionID
	}
	return nil
}

func (x *Instruction) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Instruction) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Instruction) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type GetInstructionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DialogID *DialogID `protobuf:"bytes,1,opt,name=dialogID,proto3" json:"dialogID,omitempty"`
	Limit    uint64    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetInstructionsRequest) Reset() {
	*x = GetInstructionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialog_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstructionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstructionsRequest) ProtoMessage() {}

func (x *GetInstructionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dialog_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstructionsRequest.ProtoReflect.Descriptor instead.
func (*GetInstructionsRequest) Descriptor() ([]byte, []int) {
	return file_dialog_proto_rawDescGZIP(), []int{12}
}

func (x *GetInstructionsRequest) GetDialogID() *DialogID {
	if x != nil {
		return x.DialogID
	}
	return nil
}

func (x *GetInstructionsRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetInstructionsByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DialogID      *DialogID                             `protobuf:"bytes,1,opt,name=dialogID,proto3" json:"dialogID,omitempty"`
	InstructionID *InstructionID                        `protobuf:"bytes,2,opt,name=instructionID,proto3" json:"instructionID,omitempty"`
	Limit         uint64                                `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	OffsetType    GetInstructionsByIDRequest_OffsetType `protobuf:"varint,4,opt,name=offsetType,proto3,enum=proto.GetInstructionsByIDRequest_OffsetType" json:"offsetType,omitempty"`
}

func (x *GetInstructionsByIDRequest) Reset() {
	*x = GetInstructionsByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialog_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstructionsByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstructionsByIDRequest) ProtoMessage() {}

func (x *GetInstructionsByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dialog_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstructionsByIDRequest.ProtoReflect.Descriptor instead.
func (*GetInstructionsByIDRequest) Descriptor() ([]byte, []int) {
	return file_dialog_proto_rawDescGZIP(), []int{13}
}

func (x *GetInstructionsByIDRequest) GetDialogID() *DialogID {
	if x != nil {
		return x.DialogID
	}
	return nil
}

func (x *GetInstructionsByIDRequest) GetInstructionID() *InstructionID {
	if x != nil {
		return x.InstructionID
	}
	return nil
}

func (x *GetInstructionsByIDRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetInstructionsByIDRequest) GetOffsetType() GetInstructionsByIDRequest_OffsetType {
	if x != nil {
		return x.OffsetType
	}
	return GetInstructionsByIDRequest_AFTER
}

type GetInstructionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instructions []*Instruction `protobuf:"bytes,1,rep,name=instructions,proto3" json:"instructions,omitempty"`
}

func (x *GetInstructionsResponse) Reset() {
	*x = GetInstructionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialog_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstructionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstructionsResponse) ProtoMessage() {}

func (x *GetInstructionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dialog_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstructionsResponse.ProtoReflect.Descriptor instead.
func (*GetInstructionsResponse) Descriptor() ([]byte, []int) {
	return file_dialog_proto_rawDescGZIP(), []int{14}
}

func (x *GetInstructionsResponse) GetInstructions() []*Instruction {
	if x != nil {
		return x.Instructions
	}
	return nil
}

var File_dialog_proto protoreflect.FileDescriptor

var file_dialog_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa0, 0x02, 0x0a, 0x0d, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x52, 0x09, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x29, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x65, 0x6c, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xf3, 0x01, 0x0a, 0x06, 0x44, 0x69, 0x61, 0x6c,
	0x6f, 0x67, 0x12, 0x2b, 0x0a, 0x08, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x49, 0x44, 0x52, 0x08, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x13, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a,
	0x0f, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0f, 0x6c, 0x61,
	0x73, 0x74, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x41, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0x3d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x07, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x22,
	0xa5, 0x02, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x08,
	0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x52,
	0x08, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x09, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x52, 0x09,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x4a, 0x0a, 0x0a, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0a, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4a, 0x0a, 0x0a, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x45, 0x46,
	0x4f, 0x52, 0x45, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x45, 0x46, 0x4f, 0x52, 0x45, 0x5f,
	0x49, 0x4e, 0x43, 0x4c, 0x55, 0x44, 0x45, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x46, 0x54,
	0x45, 0x52, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x46, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x4e,
	0x43, 0x4c, 0x55, 0x44, 0x45, 0x10, 0x03, 0x22, 0x4d, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x5d, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x08, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x52, 0x08, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x7b, 0x0a, 0x22, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x57, 0x69, 0x74, 0x68,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x08, 0x64,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x52, 0x08,
	0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x22, 0x87, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x44, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x7b, 0x0a, 0x1c,
	0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x42,
	0x65, 0x66, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x08,
	0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x52,
	0x08, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x09, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x52, 0x09,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x22, 0x71, 0x0a, 0x18, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x08, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x52, 0x08, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0xad, 0x01, 0x0a,
	0x0b, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x0d,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x5b, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x08, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x52, 0x08, 0x64, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x82, 0x02, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x08, 0x64, 0x69, 0x61, 0x6c,
	0x6f, 0x67, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x52, 0x08, 0x64, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x49, 0x44, 0x12, 0x3a, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x4c, 0x0a, 0x0a, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x17, 0x0a, 0x0a, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x46, 0x54, 0x45, 0x52, 0x10, 0x00, 0x22, 0x51,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0c, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2a, 0x32, 0x0a, 0x11, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x49, 0x4c, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x43,
	0x4f, 0x44, 0x45, 0x10, 0x02, 0x32, 0xde, 0x06, 0x0a, 0x0d, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x57, 0x69, 0x74, 0x68, 0x12, 0x0d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x42, 0x79, 0x49, 0x44, 0x12, 0x0f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x1a, 0x0d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x22, 0x00, 0x12, 0x43,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61, 0x6c,
	0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x57, 0x69,
	0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61, 0x6c,
	0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a,
	0x1f, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x41, 0x6e, 0x64, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f,
	0x69, 0x64, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x22, 0x00, 0x12, 0x52, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x49, 0x44, 0x12, 0x21, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x22, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x0b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x1a, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x6f, 0x6e, 0x67, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dialog_proto_rawDescOnce sync.Once
	file_dialog_proto_rawDescData = file_dialog_proto_rawDesc
)

func file_dialog_proto_rawDescGZIP() []byte {
	file_dialog_proto_rawDescOnce.Do(func() {
		file_dialog_proto_rawDescData = protoimpl.X.CompressGZIP(file_dialog_proto_rawDescData)
	})
	return file_dialog_proto_rawDescData
}

var file_dialog_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_dialog_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_dialog_proto_goTypes = []interface{}{
	(DialogMessageType)(0),                     // 0: proto.DialogMessageType
	(GetDialogMessagesRequest_OffsetType)(0),   // 1: proto.GetDialogMessagesRequest.OffsetType
	(GetInstructionsByIDRequest_OffsetType)(0), // 2: proto.GetInstructionsByIDRequest.OffsetType
	(*DialogMessage)(nil),                      // 3: proto.DialogMessage
	(*Dialog)(nil),                             // 4: proto.Dialog
	(*GetDialogsRequest)(nil),                  // 5: proto.GetDialogsRequest
	(*GetDialogsResponse)(nil),                 // 6: proto.GetDialogsResponse
	(*GetDialogMessagesRequest)(nil),           // 7: proto.GetDialogMessagesRequest
	(*GetDialogMessagesResponse)(nil),          // 8: proto.GetDialogMessagesResponse
	(*CreateDialogMessageRequest)(nil),         // 9: proto.CreateDialogMessageRequest
	(*CreateDialogMessageWithCodeRequest)(nil), // 10: proto.CreateDialogMessageWithCodeRequest
	(*CreateDialogMessageResponse)(nil),        // 11: proto.CreateDialogMessageResponse
	(*ReadAllMessagesBeforeRequest)(nil),       // 12: proto.ReadAllMessagesBeforeRequest
	(*CreateInstructionRequest)(nil),           // 13: proto.CreateInstructionRequest
	(*Instruction)(nil),                        // 14: proto.Instruction
	(*GetInstructionsRequest)(nil),             // 15: proto.GetInstructionsRequest
	(*GetInstructionsByIDRequest)(nil),         // 16: proto.GetInstructionsByIDRequest
	(*GetInstructionsResponse)(nil),            // 17: proto.GetInstructionsResponse
	(*MessageID)(nil),                          // 18: proto.MessageID
	(*UserID)(nil),                             // 19: proto.UserID
	(*timestamp.Timestamp)(nil),                // 20: google.protobuf.Timestamp
	(*DialogID)(nil),                           // 21: proto.DialogID
	(*InstructionID)(nil),                      // 22: proto.InstructionID
	(*Void)(nil),                               // 23: proto.Void
	(*Pong)(nil),                               // 24: proto.Pong
}
var file_dialog_proto_depIdxs = []int32{
	18, // 0: proto.DialogMessage.messageID:type_name -> proto.MessageID
	19, // 1: proto.DialogMessage.senderID:type_name -> proto.UserID
	20, // 2: proto.DialogMessage.createdAt:type_name -> google.protobuf.Timestamp
	0,  // 3: proto.DialogMessage.type:type_name -> proto.DialogMessageType
	21, // 4: proto.Dialog.dialogID:type_name -> proto.DialogID
	3,  // 5: proto.Dialog.lastMessage:type_name -> proto.DialogMessage
	3,  // 6: proto.Dialog.lastReadMessage:type_name -> proto.DialogMessage
	4,  // 7: proto.GetDialogsResponse.dialogs:type_name -> proto.Dialog
	21, // 8: proto.GetDialogMessagesRequest.dialogID:type_name -> proto.DialogID
	18, // 9: proto.GetDialogMessagesRequest.messageID:type_name -> proto.MessageID
	1,  // 10: proto.GetDialogMessagesRequest.offsetType:type_name -> proto.GetDialogMessagesRequest.OffsetType
	3,  // 11: proto.GetDialogMessagesResponse.messages:type_name -> proto.DialogMessage
	21, // 12: proto.CreateDialogMessageRequest.dialogID:type_name -> proto.DialogID
	21, // 13: proto.CreateDialogMessageWithCodeRequest.dialogID:type_name -> proto.DialogID
	18, // 14: proto.CreateDialogMessageResponse.messageID:type_name -> proto.MessageID
	20, // 15: proto.CreateDialogMessageResponse.createdAt:type_name -> google.protobuf.Timestamp
	21, // 16: proto.ReadAllMessagesBeforeRequest.dialogID:type_name -> proto.DialogID
	18, // 17: proto.ReadAllMessagesBeforeRequest.messageID:type_name -> proto.MessageID
	21, // 18: proto.CreateInstructionRequest.dialogID:type_name -> proto.DialogID
	22, // 19: proto.Instruction.instructionID:type_name -> proto.InstructionID
	20, // 20: proto.Instruction.createdAt:type_name -> google.protobuf.Timestamp
	21, // 21: proto.GetInstructionsRequest.dialogID:type_name -> proto.DialogID
	21, // 22: proto.GetInstructionsByIDRequest.dialogID:type_name -> proto.DialogID
	22, // 23: proto.GetInstructionsByIDRequest.instructionID:type_name -> proto.InstructionID
	2,  // 24: proto.GetInstructionsByIDRequest.offsetType:type_name -> proto.GetInstructionsByIDRequest.OffsetType
	14, // 25: proto.GetInstructionsResponse.instructions:type_name -> proto.Instruction
	19, // 26: proto.DialogService.CreateDialogWith:input_type -> proto.UserID
	21, // 27: proto.DialogService.GetDialogByID:input_type -> proto.DialogID
	5,  // 28: proto.DialogService.GetDialogs:input_type -> proto.GetDialogsRequest
	9,  // 29: proto.DialogService.CreateDialogMessage:input_type -> proto.CreateDialogMessageRequest
	10, // 30: proto.DialogService.CreateDialogMessageWithCode:input_type -> proto.CreateDialogMessageWithCodeRequest
	7,  // 31: proto.DialogService.GetDialogMessages:input_type -> proto.GetDialogMessagesRequest
	12, // 32: proto.DialogService.ReadAllMessagesBeforeAndInclude:input_type -> proto.ReadAllMessagesBeforeRequest
	13, // 33: proto.DialogService.CreateInstruction:input_type -> proto.CreateInstructionRequest
	15, // 34: proto.DialogService.GetInstructions:input_type -> proto.GetInstructionsRequest
	16, // 35: proto.DialogService.GetInstructionsByID:input_type -> proto.GetInstructionsByIDRequest
	23, // 36: proto.DialogService.Ping:input_type -> proto.Void
	4,  // 37: proto.DialogService.CreateDialogWith:output_type -> proto.Dialog
	4,  // 38: proto.DialogService.GetDialogByID:output_type -> proto.Dialog
	6,  // 39: proto.DialogService.GetDialogs:output_type -> proto.GetDialogsResponse
	11, // 40: proto.DialogService.CreateDialogMessage:output_type -> proto.CreateDialogMessageResponse
	11, // 41: proto.DialogService.CreateDialogMessageWithCode:output_type -> proto.CreateDialogMessageResponse
	8,  // 42: proto.DialogService.GetDialogMessages:output_type -> proto.GetDialogMessagesResponse
	23, // 43: proto.DialogService.ReadAllMessagesBeforeAndInclude:output_type -> proto.Void
	22, // 44: proto.DialogService.CreateInstruction:output_type -> proto.InstructionID
	17, // 45: proto.DialogService.GetInstructions:output_type -> proto.GetInstructionsResponse
	17, // 46: proto.DialogService.GetInstructionsByID:output_type -> proto.GetInstructionsResponse
	24, // 47: proto.DialogService.Ping:output_type -> proto.Pong
	37, // [37:48] is the sub-list for method output_type
	26, // [26:37] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_dialog_proto_init() }
func file_dialog_proto_init() {
	if File_dialog_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_dialog_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DialogMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialog_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dialog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialog_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDialogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialog_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDialogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialog_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDialogMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialog_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDialogMessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialog_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDialogMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialog_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDialogMessageWithCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialog_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDialogMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialog_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadAllMessagesBeforeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialog_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInstructionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialog_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instruction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialog_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstructionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialog_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstructionsByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialog_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstructionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dialog_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dialog_proto_goTypes,
		DependencyIndexes: file_dialog_proto_depIdxs,
		EnumInfos:         file_dialog_proto_enumTypes,
		MessageInfos:      file_dialog_proto_msgTypes,
	}.Build()
	File_dialog_proto = out.File
	file_dialog_proto_rawDesc = nil
	file_dialog_proto_goTypes = nil
	file_dialog_proto_depIdxs = nil
}
