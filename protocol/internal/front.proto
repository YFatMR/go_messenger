syntax = "proto3";

package proto;
option go_package = "./proto";

import "user.proto";
import "common.proto";
import "sandbox.proto";
import "dialog.proto";
import "google/api/annotations.proto";

message CreateUserFrontRequest {
  PublicCredential credential = 1;
  UserData userData = 2;
}

service Front {
  rpc CreateUser(CreateUserFrontRequest) returns (UserID) {
    option (google.api.http) = {
      post : "/users"
      body : "*"
    };
  }

  rpc GenerateToken(PublicCredential) returns (Token) {
    option (google.api.http) = {
      post : "/token"
      body : "*"
    };
  }

  rpc GetUserByID(UserID) returns (UserData) {
    option (google.api.http) = {
      get : "/users/{ID}"
    };
  }

  rpc GetProgramByID(ProgramID) returns (Program) {
    option (google.api.http) = {
      get : "/programs/{ID}"
    };
  }

  rpc CreateProgram(ProgramSource) returns (ProgramID) {
    option (google.api.http) = {
      post : "/programs"
      body : "*"
    };
  }

  rpc UpdateProgramSource(UpdateProgramSourceRequest) returns (Void) {
    option (google.api.http) = {
      patch : "/programs/source"
      body : "*"
    };
  }

  rpc RunProgram(ProgramID) returns (Void) {
    option (google.api.http) = {
      patch : "/programs/run"
      body : "*"
    };
  }

  rpc LintProgram(ProgramID) returns (Void) {
    option (google.api.http) = {
      patch : "/programs/lint"
      body : "*"
    };
  }

  rpc CreateDialogWith(UserID) returns (Dialog) {
    option (google.api.http) = {
      post : "/dialogs"
      body : "*"
    };
  }

  rpc GetDialogs(GetDialogsRequest) returns (GetDialogsResponse) {
    option (google.api.http) = {
      get : "/dialogs/{offset}/{limit}"
    };
  }

  rpc Ping(Void) returns (Pong) {
    option (google.api.http) = {
      get : "/ping"
    };
  }
}
